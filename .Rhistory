# Display posterior information:
plotMCMC( mcmcCoda ,
datFrm=myDataFrame , yName=yName , x1Name=x1Name , x2Name=x2Name ,
x1contrasts=x1contrasts ,
x2contrasts=x2contrasts ,
x1x2contrasts=x1x2contrasts ,
saveName=fileNameRoot , saveType=graphFileType )
x1contrasts = list(
# family_tax_benefit_a
list( c("family_tax_benefit_a") , c("family_tax_benefit_b") , compVal=0.0 , ROPE=c(-1000,1000) ) ,
list( c("family_tax_benefit_a") , c("healthcare_card") , compVal=0.0 , ROPE=c(-1000,1000) ) ,
# family_tax_benefit_b
list( c("family_tax_benefit_b") , c("healthcare_card") , compVal=0.0 , ROPE=c(-1000,1000) )
)
# unique(myDataFrame$State)
x2contrasts = list(
# VIC
list( c("Victoria") , c("New South Wales") , compVal=0.0 , ROPE=c(-1000,1000) ) ,
list( c("Victoria") , c("Queensland") , compVal=0.0 , ROPE=c(-1000,1000) ) ,
list( c("Victoria") , c("South Australia") , compVal=0.0 , ROPE=c(-1000,1000) ) ,
# NSW
list( c("New South Wales") , c("Queensland") , compVal=0.0 , ROPE=c(-1000,1000) ) ,
list( c("New South Wales") , c("South Australia") , compVal=0.0 , ROPE=c(-1000,1000) ) ,
# QLD
list( c("Queensland") , c("South Australia") , compVal=0.0 , ROPE=c(-1000,1000) )
)
# Each interaction contrast is a list of 2 lists of 2 vectors of level names,
# a comparison value (typically 0.0), and a ROPE (which could be NULL)::
x1x2contrasts = list(
list( list( c("family_tax_benefit_a") , c("healthcare_card") ) ,
list( c("New South Wales") , c("Victoria") ) ,
compVal=0.0 , ROPE=c(-1000,1000) ) ,
list( list( c("family_tax_benefit_a") , c("healthcare_card") ) ,
list( c("New South Wales") , c("South Australia") ) ,
compVal=0.0 , ROPE=c(-1000,1000) ) ,
list( list( c("family_tax_benefit_a") , c("Assoc","healthcare_card") ) ,
list( c("BFIN") , c("South Australia","New South Wales","Victoria") ) ,
compVal=0.0 , ROPE=c(-1000,1000) )
)
plotMCMC( mcmcCoda ,
datFrm=myDataFrame , yName=yName , x1Name=x1Name , x2Name=x2Name ,
x1contrasts=x1contrasts ,
x2contrasts=x2contrasts ,
x1x2contrasts=x1x2contrasts ,
saveName=fileNameRoot , saveType=graphFileType )
x1contrasts
show(summaryInfo)
#-------------------------------------------------------------------------------
# Get summary statistics of chain:
summaryInfo = smryMCMC( mcmcCoda ,
datFrm=myDataFrame , x1Name , x2Name ,
x1contrasts ,
x2contrasts ,
x1x2contrasts ,
saveName=fileNameRoot )
show(summaryInfo)
x1Name
x2Name
x1contrasts
x2contrasts
x1x2contrasts
#-------------------------------------------------------------------------------
# Get summary statistics of chain:
summaryInfo = smryMCMC( mcmcCoda ,
datFrm=myDataFrame , x1Name=x1Name , x2Name=x2Name ,
x1contrasts=x1contrasts ,
x2contrasts=x2contrasts ,
x1x2contrasts=x1x2contrasts ,
saveName=fileNameRoot )
??varnames
packages <- c("tidyverse",
"ggplot2",
"rmarkdown",
"knitr",
"kableExtra",
"purrr",
"scales",
"rjags",
"runjags",
"coda",
"readr",
"beepr",
"grid",
"gridExtra",
"lemon",
"coda")
lapply(packages, library, character.only=T)
#-------------------------------------------------------------------------------
# Get summary statistics of chain:
summaryInfo = smryMCMC( mcmcCoda ,
datFrm=myDataFrame , x1Name=x1Name , x2Name=x2Name ,
x1contrasts=x1contrasts ,
x2contrasts=x2contrasts ,
x1x2contrasts=x1x2contrasts ,
saveName=fileNameRoot )
show(summaryInfo)
#-------------------------------------------------------------------------------
# Get summary statistics of chain:
summaryInfo = smryMCMC( mcmcCoda ,
datFrm=myDataFrame , x1Name=x1Name , x2Name=x2Name ,
x1contrasts=x1contrasts ,
x2contrasts=x2contrasts ,
x1x2contrasts=x1x2contrasts ,
saveName=fileNameRoot )
install.packages("lemon", dep=T)
# Display posterior information:
plotMCMC( mcmcCoda ,
datFrm=myDataFrame , yName=yName , x1Name=x1Name , x2Name=x2Name ,
x1contrasts=x1contrasts ,
x2contrasts=x2contrasts ,
x1x2contrasts=x1x2contrasts ,
saveName=fileNameRoot , saveType=graphFileType )
# Display posterior information:
plotMCMC( mcmcCoda ,
datFrm=myDataFrame , yName=yName , x1Name=x1Name , x2Name=x2Name ,
x1contrasts=x1contrasts ,
x2contrasts=x2contrasts ,
x1x2contrasts=x1x2contrasts ,
saveName=fileNameRoot , saveType=graphFileType )
#-------------------------------------------------------------------------------
# Other specific comparisons of cells:
if ( fileNameRoot == "Assn3" ) {
# THIS x1level minus THAT x1level at AT x2level:
THISx1 = "family_tax_benefit_a"
THATx1 = "healthcare_card"
ATx2 = "New South Wales"
THISidx = which(levels(myDataFrame[,x1Name])==THISx1)
THATidx = which(levels(myDataFrame[,x1Name])==THATx1)
ATidx   = which(levels(myDataFrame[,x2Name])==ATx2)
openGraph(height=4,width=4)
compInfo = plotPost(
as.matrix(mcmcCoda)[,paste("m[",THISidx,",",ATidx,"]",sep="")] -
as.matrix(mcmcCoda)[,paste("m[",THATidx,",",ATidx,"]",sep="")] ,
main=paste(THISx1,"-",THATx1,"@",ATx2) ,
xlab=paste("Difference in",yName) ,
compVal=0 ,ROPE=c(-1000,1000) )
show(compInfo)
saveGraph(file=paste(fileNameRoot,THISx1,"-",THATx1,"At",ATx2,sep=""),
type=graphFileType)
# THIS x1level minus THAT x1level at AT x2level:
THISx1 = "family_tax_benefit_a"
THATx1 = "healthcare_card"
ATx2 = "Victoria"
THISidx = which(levels(myDataFrame[,x1Name])==THISx1)
THATidx = which(levels(myDataFrame[,x1Name])==THATx1)
ATidx   = which(levels(myDataFrame[,x2Name])==ATx2)
openGraph(height=4,width=4)
compInfo = plotPost(
as.matrix(mcmcCoda)[,paste("m[",THISidx,",",ATidx,"]",sep="")] -
as.matrix(mcmcCoda)[,paste("m[",THATidx,",",ATidx,"]",sep="")] ,
main=paste(THISx1,"-",THATx1,"@",ATx2) ,
xlab=paste("Difference in",yName) ,
compVal=0 ,ROPE=c(-1000,1000) )
show(compInfo)
saveGraph(file=paste(fileNameRoot,THISx1,"-",THATx1,"At",ATx2,sep=""),
type=graphFileType)
# THIS x2level minus THAT x2level at AT x1level:
THISx2 = "South Australia"
THATx2 = "Victoria"
ATx1 = "family_tax_benefit_a"
THISidx = which(levels(myDataFrame[,x2Name])==THISx2)
THATidx = which(levels(myDataFrame[,x2Name])==THATx2)
ATidx   = which(levels(myDataFrame[,x1Name])==ATx1)
openGraph(height=4,width=4)
compInfo = plotPost(
as.matrix(mcmcCoda)[,paste("m[",ATidx,",",THISidx,"]",sep="")] -
as.matrix(mcmcCoda)[,paste("m[",ATidx,",",THATidx,"]",sep="")] ,
main=paste(THISx2,"-",THATx2,"@",ATx1) ,
xlab=paste("Difference in",yName) ,
compVal=0 ,ROPE=c(-1000,1000) )
show(compInfo)
saveGraph(file=paste(fileNameRoot,THISx2,"-",THATx2,"At",ATx1,sep=""),
type=graphFileType)
}
THISidx = which(levels(myDataFrame[,x1Name])==THISx1)
THISidx
THATidx = which(levels(myDataFrame[,x1Name])==THATx1)
THATidx
levels(myDataFrame[,x1Name])
THATx1
#-------------------------------------------------------------------------------
# Other specific comparisons of cells:
if ( fileNameRoot == "Assn3" ) {
# THIS x1level minus THAT x1level at AT x2level:
THISx1 = "family_tax_benefit_a"
THATx1 = "health_care_card"
ATx2 = "New South Wales"
THISidx = which(levels(myDataFrame[,x1Name])==THISx1)
THATidx = which(levels(myDataFrame[,x1Name])==THATx1)
ATidx   = which(levels(myDataFrame[,x2Name])==ATx2)
openGraph(height=4,width=4)
compInfo = plotPost(
as.matrix(mcmcCoda)[,paste("m[",THISidx,",",ATidx,"]",sep="")] -
as.matrix(mcmcCoda)[,paste("m[",THATidx,",",ATidx,"]",sep="")] ,
main=paste(THISx1,"-",THATx1,"@",ATx2) ,
xlab=paste("Difference in",yName) ,
compVal=0 ,ROPE=c(-1000,1000) )
show(compInfo)
saveGraph(file=paste(fileNameRoot,THISx1,"-",THATx1,"At",ATx2,sep=""),
type=graphFileType)
# THIS x1level minus THAT x1level at AT x2level:
THISx1 = "family_tax_benefit_a"
THATx1 = "health_care_card"
ATx2 = "Victoria"
THISidx = which(levels(myDataFrame[,x1Name])==THISx1)
THATidx = which(levels(myDataFrame[,x1Name])==THATx1)
ATidx   = which(levels(myDataFrame[,x2Name])==ATx2)
openGraph(height=4,width=4)
compInfo = plotPost(
as.matrix(mcmcCoda)[,paste("m[",THISidx,",",ATidx,"]",sep="")] -
as.matrix(mcmcCoda)[,paste("m[",THATidx,",",ATidx,"]",sep="")] ,
main=paste(THISx1,"-",THATx1,"@",ATx2) ,
xlab=paste("Difference in",yName) ,
compVal=0 ,ROPE=c(-1000,1000) )
show(compInfo)
saveGraph(file=paste(fileNameRoot,THISx1,"-",THATx1,"At",ATx2,sep=""),
type=graphFileType)
# THIS x2level minus THAT x2level at AT x1level:
THISx2 = "South Australia"
THATx2 = "Victoria"
ATx1 = "family_tax_benefit_a"
THISidx = which(levels(myDataFrame[,x2Name])==THISx2)
THATidx = which(levels(myDataFrame[,x2Name])==THATx2)
ATidx   = which(levels(myDataFrame[,x1Name])==ATx1)
openGraph(height=4,width=4)
compInfo = plotPost(
as.matrix(mcmcCoda)[,paste("m[",ATidx,",",THISidx,"]",sep="")] -
as.matrix(mcmcCoda)[,paste("m[",ATidx,",",THATidx,"]",sep="")] ,
main=paste(THISx2,"-",THATx2,"@",ATx1) ,
xlab=paste("Difference in",yName) ,
compVal=0 ,ROPE=c(-1000,1000) )
show(compInfo)
saveGraph(file=paste(fileNameRoot,THISx2,"-",THATx2,"At",ATx1,sep=""),
type=graphFileType)
}
# THIS x1level minus THAT x1level at AT x2level:
THISx1 = "family_tax_benefit_a"
THATx1 = "health_care_card"
ATx2 = "New South Wales"
THISidx = which(levels(myDataFrame[,x1Name])==THISx1)
THISidx
THATidx = which(levels(myDataFrame[,x1Name])==THATx1)
THATidx
ATidx   = which(levels(myDataFrame[,x2Name])==ATx2)
ATidx
THISx1 = "family_tax_benefit_a"
THATx1 = "health_care_card"
ATx2 = "New South Wales"
THISidx = which(levels(myDataFrame[,x1Name])==THISx1)
THATidx = which(levels(myDataFrame[,x1Name])==THATx1)
ATidx   = which(levels(myDataFrame[,x2Name])==ATx2)
openGraph(height=4,width=4)
compInfo = plotPost(
as.matrix(mcmcCoda)[,paste("m[",THISidx,",",ATidx,"]",sep="")] -
as.matrix(mcmcCoda)[,paste("m[",THATidx,",",ATidx,"]",sep="")] ,
main=paste(THISx1,"-",THATx1,"@",ATx2) ,
xlab=paste("Difference in",yName) ,
compVal=0 ,ROPE=c(-1000,1000) )
show(compInfo)
graphFileType
graphFileType = "png"
# THIS x1level minus THAT x1level at AT x2level:
THISx1 = "family_tax_benefit_a"
THATx1 = "health_care_card"
ATx2 = "New South Wales"
THISidx = which(levels(myDataFrame[,x1Name])==THISx1)
THATidx = which(levels(myDataFrame[,x1Name])==THATx1)
ATidx   = which(levels(myDataFrame[,x2Name])==ATx2)
openGraph(height=4,width=4)
compInfo = plotPost(
as.matrix(mcmcCoda)[,paste("m[",THISidx,",",ATidx,"]",sep="")] -
as.matrix(mcmcCoda)[,paste("m[",THATidx,",",ATidx,"]",sep="")] ,
main=paste(THISx1,"-",THATx1,"@",ATx2) ,
xlab=paste("Difference in",yName) ,
compVal=0 ,ROPE=c(-1000,1000) )
show(compInfo)
plotPost(
as.matrix(mcmcCoda)[,paste("m[",THISidx,",",ATidx,"]",sep="")] -
as.matrix(mcmcCoda)[,paste("m[",THATidx,",",ATidx,"]",sep="")] ,
main=paste(THISx1,"-",THATx1,"@",ATx2) ,
xlab=paste("Difference in",yName) ,
compVal=0 ,ROPE=c(-1000,1000) )
THISidx
THATidx
ATidx
paste("m[",THISidx,",",ATidx,"]",sep="")
as.matrix(mcmcCoda)
as.matrix(mcmcCoda)[,paste("m[",THISidx,",",ATidx,"]",sep="")]
which(levels(myDataFrame[,x1Name])==THISx1)
levels(myDataFrame[,x1Name])
THISidx = which(levels(myDataFrame[,x1Name])==THISx1)
THISidx
THISx1
THATidx
levels(myDataFrame[,x2Name])
ATx2
ATidx
as.matrix(mcmcCoda)[,paste0("m[",THISidx,",",ATidx,"]")]
View(as.matrix(mcmcCoda))
# THIS x1level minus THAT x1level at AT x2level:
THISx1 = "Victoria"
THATx1 = "New South Wales"
ATx2 = "family_tax_benefit_a"
THISidx = which(levels(myDataFrame[,x1Name])==THISx1)
THISidx
colnames(mcmcCoda)
names(mcmcCoda)
str(mcmcCoda)
dimnames(mcmcCoda)
as.matrix(mcmcCoda)[,paste("m[",THISidx-1,",",ATidx-1,"]",sep="")]
THISidx
THISidx = which(levels(myDataFrame[,x1Name])==THISx1)
THATidx = which(levels(myDataFrame[,x1Name])==THATx1)
ATidx   = which(levels(myDataFrame[,x2Name])==ATx2)
as.matrix(mcmcCoda)[,paste("m[",THISidx-1,",",ATidx-1,"]",sep="")]
THISidx
# THIS x1level minus THAT x1level at AT x2level:
THISx1 = "family_tax_benefit_a"
THATx1 = "health_care_card"
ATx2 = "New South Wales"
THISidx = which(levels(myDataFrame[,x1Name])==THISx1)
THATidx = which(levels(myDataFrame[,x1Name])==THATx1)
ATidx   = which(levels(myDataFrame[,x2Name])==ATx2)
as.matrix(mcmcCoda)[,paste("m[",THISidx-1,",",ATidx-1,"]",sep="")]
as.matrix(mcmcCoda)[,paste("m[",THISidx-1,",",ATidx-1,"]",sep="")] -
as.matrix(mcmcCoda)[,paste("m[",THATidx,",",ATidx,"]",sep="")]
as.matrix(mcmcCoda)[,paste("m[",THISidx,",",ATidx,"]",sep="")]
as.matrix(mcmcCoda)[,paste("m[",THISidx,",",ATidx,"]",sep="")] -
as.matrix(mcmcCoda)[,paste("m[",THATidx,",",ATidx,"]",sep="")]
#-------------------------------------------------------------------------------
# Other specific comparisons of cells:
if ( fileNameRoot == "Assn3" ) {
# THIS x1level minus THAT x1level at AT x2level:
THISx1 = "family_tax_benefit_a"
THATx1 = "health_care_card"
ATx2 = "New South Wales"
THISidx = which(levels(myDataFrame[,x1Name])==THISx1)
THATidx = which(levels(myDataFrame[,x1Name])==THATx1)
ATidx   = which(levels(myDataFrame[,x2Name])==ATx2)
openGraph(height=4,width=4)
compInfo = plotPost(
as.matrix(mcmcCoda)[,paste("m[",THISidx,",",ATidx,"]",sep="")] -
as.matrix(mcmcCoda)[,paste("m[",THATidx,",",ATidx,"]",sep="")] ,
main=paste(THISx1,"-",THATx1,"@",ATx2) ,
xlab=paste("Difference in",yName) ,
compVal=0 ,ROPE=c(-1000,1000) )
show(compInfo)
saveGraph(file=paste(fileNameRoot,THISx1,"-",THATx1,"At",ATx2,sep=""),
type=graphFileType)
# THIS x1level minus THAT x1level at AT x2level:
THISx1 = "family_tax_benefit_a"
THATx1 = "health_care_card"
ATx2 = "Victoria"
THISidx = which(levels(myDataFrame[,x1Name])==THISx1)
THATidx = which(levels(myDataFrame[,x1Name])==THATx1)
ATidx   = which(levels(myDataFrame[,x2Name])==ATx2)
openGraph(height=4,width=4)
compInfo = plotPost(
as.matrix(mcmcCoda)[,paste("m[",THISidx,",",ATidx,"]",sep="")] -
as.matrix(mcmcCoda)[,paste("m[",THATidx,",",ATidx,"]",sep="")] ,
main=paste(THISx1,"-",THATx1,"@",ATx2) ,
xlab=paste("Difference in",yName) ,
compVal=0 ,ROPE=c(-1000,1000) )
show(compInfo)
saveGraph(file=paste(fileNameRoot,THISx1,"-",THATx1,"At",ATx2,sep=""),
type=graphFileType)
# THIS x2level minus THAT x2level at AT x1level:
THISx2 = "South Australia"
THATx2 = "Victoria"
ATx1 = "family_tax_benefit_a"
THISidx = which(levels(myDataFrame[,x2Name])==THISx2)
THATidx = which(levels(myDataFrame[,x2Name])==THATx2)
ATidx   = which(levels(myDataFrame[,x1Name])==ATx1)
openGraph(height=4,width=4)
compInfo = plotPost(
as.matrix(mcmcCoda)[,paste("m[",ATidx,",",THISidx,"]",sep="")] -
as.matrix(mcmcCoda)[,paste("m[",ATidx,",",THATidx,"]",sep="")] ,
main=paste(THISx2,"-",THATx2,"@",ATx1) ,
xlab=paste("Difference in",yName) ,
compVal=0 ,ROPE=c(-1000,1000) )
show(compInfo)
saveGraph(file=paste(fileNameRoot,THISx2,"-",THATx2,"At",ATx1,sep=""),
type=graphFileType)
}
as.matrix(mcmcCoda)
as.data.frame(mcmcCoda)
as.data.frame(as.matrix(mcmcCoda))
as.data.frame(as.matrix(mcmcCoda))[,paste("m[",THISidx,",",ATidx,"]",sep="")]
colnames(as.data.frame(as.matrix(mcmcCoda)))
THISidx
# Display posterior information:
plotMCMC( mcmcCoda ,
datFrm=myDataFrame , yName=yName , x1Name=x1Name , x2Name=x2Name ,
x1contrasts=x1contrasts ,
x2contrasts=x2contrasts ,
x1x2contrasts=x1x2contrasts ,
saveName=fileNameRoot , saveType=graphFileType )
summaryInfo
summaryInfo = smryMCMC( mcmcCoda ,
datFrm=myDataFrame , x1Name=x1Name , x2Name=x2Name ,
x1contrasts=x1contrasts ,
x2contrasts=x2contrasts ,
x1x2contrasts=x1x2contrasts ,
saveName=fileNameRoot )
packages <- c("tidyverse",
"ggplot2",
"rmarkdown",
"knitr",
"kableExtra",
"purrr",
"scales",
"rjags",
"runjags",
"coda",
"readr",
"beepr",
"grid",
"gridExtra",
"lemon",
"coda")
lapply(packages, library, character.only=T)
sapply(packages, library, character.only=T)
#-------------------------------------------------------------------------------
# Get summary statistics of chain:
summaryInfo = smryMCMC( mcmcCoda ,
datFrm=myDataFrame , x1Name=x1Name , x2Name=x2Name ,
x1contrasts=x1contrasts ,
x2contrasts=x2contrasts ,
x1x2contrasts=x1x2contrasts ,
saveName=fileNameRoot )
levels(myDataFrame$payment_type)
maxamount <- max(SocialSecLong$amount)
ggplot(SocialSecLong) +
geom_histogram(na.rm=T,
aes(x=amount),
bins=40,
col="white",
fill="skyblue4") +
theme_minimal() +
labs(title="Histogram of Payment Amounts",
subtitle="(Likelihood Distribution)",
y="Frequency", x="Payment Amount") +
geom_label(x=maxamount*0.9, y=250,
label=paste("Maximum =",maxamount))
SocialSecLong$payment_type <- as.factor(SocialSecLong$payment_type)
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=payment_type, y=amount),
col="grey40",
fill="seagreen1") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Payment Type",
x="Payment Type", y="Amount") +
scale_x_discrete(limits=rev(levels(SocialSecLong$payment_type))) +
theme_minimal()
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=State, y=amount),
col="grey40",
fill="darkslategray2") +
coord_flip() +
labs(title="Distributions of Payment Amounts by State",
x="State", y="Amount") +
theme_minimal()
install.packages("multipanelfigure")
install.packages("multipanelfigure")
library(multipanelfigure)
install.packages("multipanelfigure", dep=T)
library(multipanelfigure)
library(gridGraphics)
library(gridGraphics)
gridExtra
library(gridExtra)
grob("MOdel Diagram.png")
SocialSecLong$payment_type <- as.factor(SocialSecLong$payment_type)
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=payment_type, y=amount),
col="grey40",
fill="seagreen1") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Payment Type",
x="Payment Type", y="Amount") +
scale_x_discrete(limits=rev(levels(SocialSecLong$payment_type))) +
theme_minimal()
packages <- c("tidyverse",
"ggplot2",
"rmarkdown",
"knitr",
"kableExtra",
"purrr",
"scales",
"rjags",
"runjags",
"coda",
"readr",
"beepr",
"grid",
"gridExtra",
"lemon",
"coda")
sapply(packages, library, character.only=T)
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=payment_type, y=amount),
col="grey40",
fill="seagreen1") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Payment Type",
x="Payment Type", y="Amount") +
scale_x_discrete(limits=rev(levels(SocialSecLong$payment_type))) +
theme_minimal()
