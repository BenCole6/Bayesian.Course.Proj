y="Frequency", x="Payment Amount") +
geom_label(x=maxamount, y=250,
label=c("Maximum= ",maxamount))
maxamount <- max(SocialSecLong$amount)
ggplot(SocialSecLong) +
geom_histogram(na.rm=T,
aes(x=amount),
bins=40,
col="white",
fill="skyblue4") +
theme_minimal() +
labs(title="Histogram of Payment Amounts",
subtitle="(Likelihood Distribution)",
y="Frequency", x="Payment Amount") +
geom_label(x=maxamount, y=250,
label=c("Maximum= ",maxamount))
ggplot(SocialSecLong) +
geom_histogram(na.rm=T,
aes(x=amount),
bins=40,
col="white",
fill="skyblue4") +
theme_minimal() +
labs(title="Histogram of Payment Amounts",
subtitle="(Likelihood Distribution)",
y="Frequency", x="Payment Amount")
ggplot(SocialSecLong) +
geom_histogram(na.rm=T,
aes(x=amount),
bins=40,
col="white",
fill="skyblue4") +
theme_minimal() +
labs(title="Histogram of Payment Amounts",
subtitle="(Likelihood Distribution)",
y="Frequency", x="Payment Amount") +
geom_label(x=maxamount, y=250,
label=c("Maximum= ",maxamount))
c?
?c()
ggplot(SocialSecLong) +
geom_histogram(na.rm=T,
aes(x=amount),
bins=40,
col="white",
fill="skyblue4") +
theme_minimal() +
labs(title="Histogram of Payment Amounts",
subtitle="(Likelihood Distribution)",
y="Frequency", x="Payment Amount") +
geom_label(x=maxamount, y=250,
label=p0("Maximum= ",maxamount))
ggplot(SocialSecLong) +
geom_histogram(na.rm=T,
aes(x=amount),
bins=40,
col="white",
fill="skyblue4") +
theme_minimal() +
labs(title="Histogram of Payment Amounts",
subtitle="(Likelihood Distribution)",
y="Frequency", x="Payment Amount") +
geom_label(x=maxamount, y=250,
label=paste0("Maximum= ",maxamount))
ggplot(SocialSecLong) +
geom_histogram(na.rm=T,
aes(x=amount),
bins=40,
col="white",
fill="skyblue4") +
theme_minimal() +
labs(title="Histogram of Payment Amounts",
subtitle="(Likelihood Distribution)",
y="Frequency", x="Payment Amount") +
geom_label(x=maxamount, y=250,
label=paste("Maximum =",maxamount))
ggplot(SocialSecLong) +
geom_histogram(na.rm=T,
aes(x=amount),
bins=40,
col="white",
fill="skyblue4") +
theme_minimal() +
labs(title="Histogram of Payment Amounts",
subtitle="(Likelihood Distribution)",
y="Frequency", x="Payment Amount") +
geom_label(x=maxamount, y=250,
label=paste("Maximum =",maxamount),
position="right")
ggplot(SocialSecLong) +
geom_histogram(na.rm=T,
aes(x=amount),
bins=40,
col="white",
fill="skyblue4") +
theme_minimal() +
labs(title="Histogram of Payment Amounts",
subtitle="(Likelihood Distribution)",
y="Frequency", x="Payment Amount") +
geom_label(x=maxamount*0.8, y=250,
label=paste("Maximum =",maxamount))
ggplot(SocialSecLong) +
geom_histogram(na.rm=T,
aes(x=amount),
bins=40,
col="white",
fill="skyblue4") +
theme_minimal() +
labs(title="Histogram of Payment Amounts",
subtitle="(Likelihood Distribution)",
y="Frequency", x="Payment Amount") +
geom_label(x=maxamount*0.9, y=250,
label=paste("Maximum =",maxamount))
ggplot(SocialSecLong)+
geom_density(na.rm=T,
aes(x=payment_type, y=amount))
ggplot(SocialSecLong)+
geom_density(na.rm=T,
aes(x=payment_type, y=amount))
ggplot(SocialSecLong)+
geom_density(na.rm=T,
aes(y=amount, x=payment_type))
ggplot(SocialSecLong)+
geom_density(na.rm=T,
aes(y=amount, x=payment_type))
ggplot(SocialSecLong, aes(x=payment_type, y=amount))+
geom_density(na.rm=T)
ggplot(SocialSecLong, aes(x=payment_type))+
geom_density(na.rm=T)
ggplot(SocialSecLong)+
geom_violin(na.rm=T,
aes(x=payment_type, y=amount))
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=payment_type, y=amount))
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=payment_type, y=amount)) +
coord_flip()
ggplot(SocialSecLong)+
geom_violin(na.rm=T,
aes(x=payment_type, y=amount)) +
coord_flip()
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=payment_type, y=amount)) +
coord_flip()
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=payment_type, y=amount),
col="grey40",
fill="forestgreen") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Payment Type",
x="Payment Type", y="Amount")
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=payment_type, y=amount),
col="grey40",
fill="forestgreen") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Payment Type",
x="Payment Type", y="Amount") +
theme_minimal()
colourpicker:::colourPickerAddin()
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=payment_type, y=amount),
col="grey40",
fill="seagreen1") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Payment Type",
x="Payment Type", y="Amount") +
theme_minimal()
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=state_of_commonwealth_electoral_, y=amount),
col="grey40",
fill="seagreen1") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Payment Type",
x="Payment Type", y="Amount") +
theme_minimal()
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=state_of_commonwealth_electoral_, y=amount),
col="grey40",
fill="darkslategrey2") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Payment Type",
x="Payment Type", y="Amount") +
theme_minimal()
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=state_of_commonwealth_electoral_, y=amount),
col="grey40",
fill="darkslategray2") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Payment Type",
x="Payment Type", y="Amount") +
theme_minimal()
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=state_of_commonwealth_electoral_, y=amount),
col="grey40",
fill="darkslategray2") +
coord_flip() +
labs(title="Distributions of Payment Amounts by State",
x="State", y="Amount") +
theme_minimal()
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=commonwealth_electoral_divisio00, y=amount),
col="grey40",
fill="darkslategray2") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Payment Type",
x="Payment Type", y="Amount") +
theme_minimal()
colnames(SocialSecLong)
colnames(SocialSecLong)[1] <- "Commonwealth Electoral Division No."
colnames(SocialSecLong)[2] <- "Commonwealth Electoral Division Name"
colnames(SocialSecLong)[1] <- "Commonwealth Electoral Division No."
colnames(SocialSecLong)[2] <- "Commonwealth Electoral Division Name"
colnames(SocialSecLong)[3] <- "State"
colnames(SocialSecLong)
colnames(SocialSecLong)[2] <- "Commonwealth_Electoral_Division_Name"
colnames(SocialSecLong)[1] <- "Commonwealth_Electoral_Division_No."
colnames(SocialSecLong)[2] <- "Commonwealth_Electoral_Division_Name"
colnames(SocialSecLong)[3] <- "State"
colnames(SocialSecLong)[4]
maxamount <- max(SocialSecLong$amount)
ggplot(SocialSecLong) +
geom_histogram(na.rm=T,
aes(x=amount),
bins=40,
col="white",
fill="skyblue4") +
theme_minimal() +
labs(title="Histogram of Payment Amounts",
subtitle="(Likelihood Distribution)",
y="Frequency", x="Payment Amount") +
geom_label(x=maxamount*0.9, y=250,
label=paste("Maximum =",maxamount))
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=payment_type, y=amount),
col="grey40",
fill="seagreen1") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Payment Type",
x="Payment Type", y="Amount") +
theme_minimal()
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=State, y=amount),
col="grey40",
fill="darkslategray2") +
coord_flip() +
labs(title="Distributions of Payment Amounts by State",
x="State", y="Amount") +
theme_minimal()
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=Commonwealth_Electoral_Division_Name, y=amount),
col="grey40",
fill="darkslategray2") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Payment Type",
x="Payment Type", y="Amount") +
theme_minimal()
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=Commonwealth_Electoral_Division_Name, y=amount),
col="grey40",
fill="darkslategray2") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Payment Type",
x="Payment Type", y="Amount") +
theme_minimal()
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=Commonwealth_Electoral_Division_Name, y=amount),
col="grey40",
fill="darkslategray2") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Payment Type",
x="Payment Type", y="Amount") +
theme_minimal()
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=Commonwealth_Electoral_Division_Name, y=amount),
col="grey40",
fill="darkslategray2") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Payment Type",
x="Payment Type", y="Amount") +
theme_minimal()
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=Commonwealth_Electoral_Division_Name, y=amount),
col="grey40",
fill="darkslategray2") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Payment Type",
x="Payment Type", y="Amount") +
theme_minimal()
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=Commonwealth_Electoral_Division_Name, y=amount),
col="grey40",
fill="darkslategray2") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Payment Type",
x="Payment Type", y="Amount") +
scale_x_discrete(limits=rev(levels(Commonwealth_Electoral_Division_Name)))
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=Commonwealth_Electoral_Division_Name, y=amount),
col="grey40",
fill="darkslategray2") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Payment Type",
x="Payment Type", y="Amount") +
scale_x_reverse()
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=Commonwealth_Electoral_Division_Name, y=amount),
col="grey40",
fill="darkslategray2") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Payment Type",
x="Payment Type", y="Amount") +
scale_x_reverse() +
theme_minimal()
class(SocialSecLong$Commonwealth_Electoral_Division_Name)
SocialSecLong$Commonwealth_Electoral_Division_Name <- as.factor(SocialSecLong$Commonwealth_Electoral_Division_Name)
levels(SocialSecLong$Commonwealth_Electoral_Division_Name)
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=Commonwealth_Electoral_Division_Name, y=amount),
col="grey40",
fill="darkslategray2") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Payment Type",
x="Payment Type", y="Amount") +
scale_x_discrete(limits=rev(levels(SocialSecLong$Commonwealth_Electoral_Division_Name))) +
theme_minimal()
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=payment_type, y=amount),
col="grey40",
fill="seagreen1") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Payment Type",
x="Payment Type", y="Amount") +
scale_x_discrete(limits=levels(rev(as.factor(SocialSecLong$payment_type)))) +
theme_minimal()
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=payment_type, y=amount),
col="grey40",
fill="seagreen1") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Payment Type",
x="Payment Type", y="Amount") +
theme_minimal()
SocialSecLong$payment_type <- as.factor(SocialSecLong$payment_type)
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=payment_type, y=amount),
col="grey40",
fill="seagreen1") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Payment Type",
x="Payment Type", y="Amount") +
scale_x_discrete(limits=levels(rev(payment_type))) +
theme_minimal()
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=payment_type, y=amount),
col="grey40",
fill="seagreen1") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Payment Type",
x="Payment Type", y="Amount") +
scale_x_discrete(limits=levels(rev(SocialSecLong$payment_type))) +
theme_minimal()
levels(SocialSecLong$payment_type)
class(SocialSecLong$payment_type)
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=payment_type, y=amount),
col="grey40",
fill="seagreen1") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Payment Type",
x="Payment Type", y="Amount") +
scale_x_discrete(limits=rev(levels(SocialSecLong$payment_type))) +
theme_minimal()
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=Commonwealth_Electoral_Division_Name, y=amount),
col="grey40",
fill="lightgoldenrod1") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Payment Type",
x="Payment Type", y="Amount") +
scale_x_discrete(limits=rev(levels(SocialSecLong$Commonwealth_Electoral_Division_Name))) +
theme_minimal()
SocialSecLong %>% group_by(Commonwealth_Electoral_Division_Name) %>%
summarise("Number of Observations"=n())
SocialSecLong %>% group_by(payment_type) %>%
summarise("Number of Observations"=n())
getwd()
write.csv(SocialSecLong)
write.csv(SocialSecLong, file="SocialSecLong.csv")
ggplot(SocialSecLong) +
geom_point(aes(x=payment_type, y=Commonwealth_Electoral_Division_Name))
ggplot(SocialSecLong) +
geom_point(aes(x=payment_type, y=amounts))+
facet_grid(~Commonwealth_Electoral_Division_Name)
ggplot(SocialSecLong) +
geom_point(aes(x=payment_type, y=amount))+
facet_grid(~Commonwealth_Electoral_Division_Name)
colnames(SocialSecLong)
unique(SocialSecLong$payment_type)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet-Assn3.Run.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.Assn3.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet-Assn3.Run.R', echo=TRUE)
myDataFrame = read.csv( file="SocialSecLong.csv" )
View(myDataFrame)
write.csv(SocialSecLong,
file="SocialSecLong.csv",
row.names = F)
myDataFrame = read.csv( file="SocialSecLong.csv" )
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.Assn3.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet-Assn3.Run.R', echo=TRUE)
unique(SocialSecLong$amount)
unique(SocialSecLong$amount) %>% order(desc)
unique(SocialSecLong$amount) %>% order() %>% desc()
unique(SocialSecLong$amount) %>% order(na.last=F)
packages <- c("tidyverse",
"ggplot2",
"rmarkdown",
"knitr",
"kableExtra",
"purrr",
"scales",
"rjags",
"runjags",
"coda",
"readr",
"beepr",
"grid",
"gridExtra",
"lemon")
lapply(packages, library, character.only=T)
unique(SocialSecLong$amount) %>% order(na.last=F)
unique(SocialSecLong$Commonwealth_Electoral_Division_Name) %>% order(na.last=F)
unique(SocialSecLong$Commonwealth_Electoral_Division_Name)
unique(SocialSecLong$Commonwealth_Electoral_Division_Name) %>% order(na.last=F)
unique(SocialSecLong$Commonwealth_Electoral_Division_Name) %>% order(na.last=F)
unique(SocialSecLong$Commonwealth_Electoral_Division_Name)
SocialSecNA.RM <- filter(SocialSecLong, Commonwealth_Electoral_Division_No.!=NA)
View(SocialSecNA.RM)
SocialSecNA.RM <- filter(SocialSecLong, `Commonwealth_Electoral_Division_No.`!=NA)
SocialSecNA.RM <- filter(SocialSecLong, !is.na(`Commonwealth_Electoral_Division_No.`))
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet-Assn3.Run.R', echo=TRUE)
write.csv(SocialSecNA.RM,
file="SocialSecNA.RM.csv",
row.names = F)
SocialSecNA.RM <- filter(SocialSecLong, !is.na(`Commonwealth_Electoral_Division_No.`))
write.csv(SocialSecNA.RM,
file="SocialSecNA.RM.csv",
row.names = F)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet-Assn3.Run.R', echo=TRUE)
as.numeric(datFrm[,yName])
as.numeric(myDataFrame[,yName])
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet-Assn3.Run.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.Assn3.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet-Assn3.Run.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet-Assn3.Run.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet-Assn3.Run.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet-Assn3.Run.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet-Assn3.Run.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.Assn3.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet-Assn3.Run.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet-Assn3.Run.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.Assn3.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet-Assn3.Run.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet-Assn3.Run.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet-Assn3.Run.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.Assn3.R', echo=TRUE)
x1Name
x2Name
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet-Assn3.Run.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.Assn3.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet-Assn3.Run.R', echo=TRUE)
getwd()
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.Assn3.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet-Assn3.Run.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.Assn3.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet-Assn3.Run.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.Assn3.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet-Assn3.Run.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.Assn3.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet-Assn3.Run.R', echo=TRUE)
??plotMCMC
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet-Assn3.Run.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet-Example.R', echo=TRUE)
