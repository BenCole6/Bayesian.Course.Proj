mode(SocialSecNA.RM$amount)
mean(SocialSecNA.RM$amount)
myDataFrame$payment_type = factor( myDataFrame$payment_type,
ordered=F)
levels(myDataFrame$payment_type)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.Assn3.Run.R', echo=TRUE)
min(myDataFrame$amount)
max(myDataFrame$amount)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.Assn3.Run.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.Assn3.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.Assn3.Run.R', echo=TRUE)
myDataFrame = read.csv( file="SocialSecNA.RM.csv" )
View(myDataFrame)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.Assn3.Run.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.Assn3.Run.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.Assn3.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.Assn3.Run.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.Assn3.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.Assn3.Run.R', echo=TRUE)
myDataFrame = read.csv( file="SocialSecNA.RM.csv" )
myDataFrame$payment_type = factor( myDataFrame$payment_type, min(myDataFrame$amount), ordered=F)
levels(myDataFrame$payment_type_)
levels(myDataFrame$payment_type)
myDataFrame = read.csv( file="SocialSecNA.RM.csv" )
myDataFrame$payment_type = factor(myDataFrame$payment_type, min(myDataFrame$amount), ordered=T)
myDataFrame = read.csv( file="SocialSecNA.RM.csv" )
myDataFrame$payment_type = factor(myDataFrame$payment_type, min(myDataFrame$amount))
myDataFrame = read.csv( file="SocialSecNA.RM.csv" )
myDataFrame$payment_type = as.factor(myDataFrame$payment_type, min(myDataFrame$amount))
myDataFrame = read.csv( file="SocialSecNA.RM.csv" )
myDataFrame$payment_type = factor(myDataFrame$payment_type, ordered=F)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.Assn3.Run.R', echo=TRUE)
datFrm = myDataFrame
myDataFrame = read.csv( file="Salary.csv" )
myDataFrame$Pos = factor( myDataFrame$Pos ,
levels=c("FT3","FT2","FT1","NDW","DST") ,
ordered=TRUE ,
labels=c("Assis","Assoc","Full","Endow","Disting") )
yName="Salary"
x1Name="Pos"
x2Name="Org"
datFrm = myDataFrame
y = as.numeric(datFrm[,yName])
x1 = as.numeric(as.factor(datFrm[,x1Name]))
x1levels = levels(as.factor(datFrm[,x1Name]))
x2 = as.numeric(as.factor(datFrm[,x2Name]))
x2levels = levels(as.factor(datFrm[,x2Name]))
Ntotal = length(y)
Nx1Lvl = length(unique(x1))
Nx2Lvl = length(unique(x2))
yMean = mean(y)
ySD = sd(y)
aGammaShRa = unlist( gammaShRaFromModeSD( mode=sd(y)/2 , sd=2*sd(y) ) )
aGammaShRa
cellSDs = aggregate( y , list(x1,x2) , FUN=sd )
cellSDs
myDataFrame = read.csv( file="SocialSecNA.RM.csv" )
myDataFrame$payment_type = factor(myDataFrame$payment_type, ordered=F)
myDataFrame$Commonwealth_Electoral_Division_Name = factor(myDataFrame$Commonwealth_Electoral_Division_Name, ordered=F)
yName="amount"
x1Name="payment_type"
x2Name="Commonwealth_Electoral_Division_Name"
datFrm = myDataFrame
y = as.numeric(datFrm[,yName])
y
x1 = as.numeric(as.factor(datFrm[,x1Name]))
x1
x1Name
myDataFrame = read.csv( file="Salary.csv" )
myDataFrame$Pos = factor( myDataFrame$Pos ,
levels=c("FT3","FT2","FT1","NDW","DST") ,
ordered=TRUE ,
labels=c("Assis","Assoc","Full","Endow","Disting") )
yName="Salary"
x1Name="Pos"
x2Name="Org"
datFrm = myDataFrame
y = as.numeric(datFrm[,yName])
x1 = as.numeric(as.factor(datFrm[,x1Name]))
x1
as.factor(datFrm[,x1Name])
x1levels = levels(as.factor(datFrm[,x1Name]))
x1levels
x2 = as.numeric(as.factor(datFrm[,x2Name]))
x2
x2levels = levels(as.factor(datFrm[,x2Name]))
x2levels
Ntotal = length(y)
Nx1Lvl = length(unique(x1))
Nx2Lvl = length(unique(x2))
yMean = mean(y)
ySD = sd(y)
aGammaShRa = unlist( gammaShRaFromModeSD( mode=sd(y)/2 , sd=2*sd(y) ) )
aGammaShRa
cellSDs = aggregate( y , list(x1,x2) , FUN=sd )
cellSDs
myDataFrame = read.csv( file="SocialSecNA.RM.csv" )
myDataFrame$payment_type = factor(myDataFrame$payment_type, ordered=F)
myDataFrame$Commonwealth_Electoral_Division_Name = factor(myDataFrame$Commonwealth_Electoral_Division_Name, ordered=F)
yName="amount"
x1Name="payment_type"
x2Name="Commonwealth_Electoral_Division_Name"
datFrm = myDataFrame
y = as.numeric(datFrm[,yName])
x1 = as.numeric(as.factor(datFrm[,x1Name]))
x1
x1levels = levels(as.factor(datFrm[,x1Name]))
x2 = as.numeric(as.factor(datFrm[,x2Name]))
x2levels = levels(as.factor(datFrm[,x2Name]))
x2
x2levels
x1levels
Ntotal = length(y)
Ntotal
Nx1Lvl = length(unique(x1))
Nx1Lvl
Nx2Lvl
Nx2Lvl = length(unique(x2))
Nx2Lvl
yMean = mean(y)
yMean
ySD = sd(y)
ySD
aGammaShRa = unlist( gammaShRaFromModeSD( mode=sd(y)/2 , sd=2*sd(y) ) )
aGammaShRa
cellSDs = aggregate( y , list(x1,x2) , FUN=sd )
cellSDs
cellSDs
datFrm
aggregate(datFrm$amount, list(datFrm$payment_type, datFrm$Commonwealth_Electoral_Division_Name), FUN=sd)
class(datFrm$amount)
myDataFrame = read.csv( file="Salary.csv" )
class(myDataFrame$Salary)
datFrm = myDataFrame
class(datFrm$Salary)
sapply(datFrm, class)
myDataFrame = read.csv( file="SocialSecNA.RM.csv" )
myDataFrame$payment_type = factor(myDataFrame$payment_type, ordered=F)
myDataFrame$Commonwealth_Electoral_Division_Name = factor(myDataFrame$Commonwealth_Electoral_Division_Name, ordered=F)
yName="amount"
x1Name="payment_type"
x2Name="Commonwealth_Electoral_Division_Name"
datFrm = myDataFrame
sapply(datFrm, class)
packages <- c("tidyverse",
"ggplot2",
"rmarkdown",
"knitr",
"kableExtra",
"purrr",
"scales",
"rjags",
"runjags",
"coda",
"readr",
"beepr",
"grid",
"gridExtra",
"lemon")
lapply(packages, library, character.only=T)
SocialSecPaymentsMar2014 <- read_csv("dsselectoratedatamarch2014flat.csv")
SocialSecLong <- gather(SocialSecPaymentsMar2014,
key="payment_type", value="amount",
-c(commonwealth_electoral_division_,
commonwealth_electoral_divisio00,
state_of_commonwealth_electoral_))
SocialSecLong$amount <- replace(SocialSecLong$amount, SocialSecLong$amount=="<20",20)
SocialSecLong$amount <- as.numeric(SocialSecLong$amount)
SocialSecLong <- filter(SocialSecLong, state_of_commonwealth_electoral_!="Total")
colnames(SocialSecLong)[1] <- "Commonwealth_Electoral_Division_No."
colnames(SocialSecLong)[2] <- "Commonwealth_Electoral_Division_Name"
colnames(SocialSecLong)[3] <- "State"
SocialSecLong$payment_type <- as.factor(SocialSecLong$payment_type)
SocialSecLong$Commonwealth_Electoral_Division_Name <- as.factor(SocialSecLong$Commonwealth_Electoral_Division_Name)
write.csv(SocialSecLong,
file="SocialSecLong.csv",
row.names = F)
SocialSecNA.RM <- filter(SocialSecLong, !is.na(`Commonwealth_Electoral_Division_No.`))
SocialSecNA.RM
SocialSecNA.RM$Commonwealth_Electoral_Division_No. <- NULL
SocialSecNA.RM
write.csv(SocialSecNA.RM,
file="SocialSecNA.RM.csv",
row.names = F)
myDataFrame = read.csv( file="SocialSecNA.RM.csv" )
myDataFrame$payment_type = factor(myDataFrame$payment_type, ordered=F)
myDataFrame$Commonwealth_Electoral_Division_Name = factor(myDataFrame$Commonwealth_Electoral_Division_Name, ordered=F)
yName="amount"
x1Name="payment_type"
x2Name="Commonwealth_Electoral_Division_Name"
datFrm = myDataFrame
y = as.numeric(datFrm[,yName])
x1 = as.numeric(as.factor(datFrm[,x1Name]))
x1levels = levels(as.factor(datFrm[,x1Name]))
x2 = as.numeric(as.factor(datFrm[,x2Name]))
x2levels = levels(as.factor(datFrm[,x2Name]))
Ntotal = length(y)
Nx1Lvl = length(unique(x1))
Nx2Lvl = length(unique(x2))
yMean = mean(y)
ySD = sd(y)
aGammaShRa = unlist( gammaShRaFromModeSD( mode=sd(y)/2 , sd=2*sd(y) ) )
cellSDs = aggregate( y , list(x1,x2) , FUN=sd )
cellSDs
list(x1,x2)
y
class(y)
class(x1)
class(x2)
aggregate(datFrm$amount, list(datFrm$payment_type, datFrm$Commonwealth_Electoral_Division_Name), FUN=sd)
sum(is.na(datFrm))
sum(!is.na(datFrm))
Ntotal
y
y = numeric(datFrm[,yName])
datFrm[,yName]
myDataFrame$amount
length(myDataFrame$amount)
myDataFrame = read.csv( file="SocialSecNA.RM.csv" )
myDataFrame$amount
myDataFrame = read_csv( file="SocialSecNA.RM.csv" )
myDataFrame$amount
length(myDataFrame$amount)
SocialSecNA.RM
SocialSecLong
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.Assn3.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.Assn3.Run.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.Assn3.Run.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.Assn3.Run.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.Assn3.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.Assn3.Run.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.Assn3.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.Assn3.Run.R', echo=TRUE)
myDataFrame = read.csv( file="Salary.csv" )
myDataFrame$Pos = factor( myDataFrame$Pos ,
levels=c("FT3","FT2","FT1","NDW","DST") ,
ordered=TRUE ,
labels=c("Assis","Assoc","Full","Endow","Disting") )
yName="Salary"
x1Name="Pos"
x2Name="Org"
datFrm = myDataFrame
y = as.numeric(datFrm[,yName])
x1 = as.numeric(as.factor(datFrm[,x1Name]))
x1levels = levels(as.factor(datFrm[,x1Name]))
x2 = as.numeric(as.factor(datFrm[,x2Name]))
x2levels = levels(as.factor(datFrm[,x2Name]))
Ntotal = length(y)
Nx1Lvl = length(unique(x1))
Nx2Lvl = length(unique(x2))
yMean = mean(y)
ySD = sd(y)
aGammaShRa = unlist( gammaShRaFromModeSD( mode=sd(y)/2 , sd=2*sd(y) ) )
cellSDs = aggregate( y , list(x1,x2) , FUN=sd )
aGammaShRa
cellSDs
cellSDs
aggregate( y , list(x1,x2) , FUN=sd )
myDataFrame = read_csv( file="SocialSecNA.RM.csv" )
myDataFrame$payment_type = factor(myDataFrame$payment_type, ordered=F)
myDataFrame$Commonwealth_Electoral_Division_Name = factor(myDataFrame$Commonwealth_Electoral_Division_Name, ordered=F)
yName="amount"
x1Name="payment_type"
x2Name="Commonwealth_Electoral_Division_Name"
y = as.numeric(datFrm[,yName])
y = as.numeric(datFrm[,yName])
myDataFrame = read_csv( file="SocialSecNA.RM.csv" )
# Re-label and re-order the Pos factor:
myDataFrame$payment_type = factor(myDataFrame$payment_type, ordered=F)
myDataFrame$Commonwealth_Electoral_Division_Name = factor(myDataFrame$Commonwealth_Electoral_Division_Name, ordered=F)
# Specify the column names in the data file relevant to the analysis:
yName="amount"
# x1 should be factor with fewer levels, to plot in single pane:
x1Name="payment_type"
x2Name="Commonwealth_Electoral_Division_Name"
datFrm = myDataFrame
y = as.numeric(datFrm[,yName])
y = as.numeric(datFrm[,yName])
yName
datFrm$amount
class(datFrm$amount)
as.numeric(datFrm[,yName])
myDataFrame = read_csv("SocialSecNA.RM.csv",
col_types = cols(amount = col_double()))
myDataFrame$payment_type = factor(myDataFrame$payment_type, ordered=F)
myDataFrame$Commonwealth_Electoral_Division_Name = factor(myDataFrame$Commonwealth_Electoral_Division_Name, ordered=F)
yName="amount"
x1Name="payment_type"
x2Name="Commonwealth_Electoral_Division_Name"
datFrm = myDataFrame
y = as.numeric(datFrm[,yName])
y = numeric(datFrm[,yName])
sapply(datFrm, class)
myDataFrame = read_csv("SocialSecNA.RM.csv",
col_types = cols(amount = col_numeric()))
myDataFrame$payment_type = factor(myDataFrame$payment_type, ordered=F)
myDataFrame$Commonwealth_Electoral_Division_Name = factor(myDataFrame$Commonwealth_Electoral_Division_Name, ordered=F)
yName="amount"
x1Name="payment_type"
x2Name="Commonwealth_Electoral_Division_Name"
datFrm = myDataFrame
sapply(datFrm, class)
y = as.numeric(datFrm[,yName])
x1 = as.numeric(as.factor(datFrm[,x1Name]))
myDataFrame = read.csv("SocialSecNA.RM.csv")
myDataFrame$payment_type = factor(myDataFrame$payment_type, ordered=F)
myDataFrame$Commonwealth_Electoral_Division_Name = factor(myDataFrame$Commonwealth_Electoral_Division_Name, ordered=F)
yName="amount"
x1Name="payment_type"
x2Name="Commonwealth_Electoral_Division_Name"
datFrm = myDataFrame
sapply(datFrm, class)
y = as.numeric(datFrm[,yName])
x1 = as.numeric(as.factor(datFrm[,x1Name]))
x1levels = levels(as.factor(datFrm[,x1Name]))
x2 = as.numeric(as.factor(datFrm[,x2Name]))
x2levels = levels(as.factor(datFrm[,x2Name]))
Ntotal = length(y)
Nx1Lvl = length(unique(x1))
Nx2Lvl = length(unique(x2))
yMean = mean(y)
ySD = sd(y)
aGammaShRa = unlist( gammaShRaFromModeSD( mode=sd(y)/2 , sd=2*sd(y) ) )
aGammaShRa
aggregate( y , list(x1,x2) , FUN=sd )
myDataFrame = read.csv("SocialSecNA.RM.csv")
myDataFrame$payment_type = factor(myDataFrame$payment_type, ordered=F)
myDataFrame$Commonwealth_Electoral_Division_Name = factor(myDataFrame$Commonwealth_Electoral_Division_Name, ordered=F)
yName="amount"
x1Name="payment_type"
x2Name="State"
datFrm = myDataFrame
y = as.numeric(datFrm[,yName])
x1 = as.numeric(as.factor(datFrm[,x1Name]))
x1levels = levels(as.factor(datFrm[,x1Name]))
x2 = as.numeric(as.factor(datFrm[,x2Name]))
x2levels = levels(as.factor(datFrm[,x2Name]))
Ntotal = length(y)
Nx1Lvl = length(unique(x1))
Nx2Lvl = length(unique(x2))
yMean = mean(y)
ySD = sd(y)
aGammaShRa = unlist( gammaShRaFromModeSD( mode=sd(y)/2 , sd=2*sd(y) ) )
cellSDs
SocialSecLong
SocialSecLong$Commonwealth_Electoral_Division_Name <- as.factor(SocialSecLong$Commonwealth_Electoral_Division_Name)
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=State, y=amount),
col="grey40",
fill="lightgoldenrod1") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Commonwealth Electoral Division",
caption="(Also referred to as Federal Electoral Division)",
x="Payment Type", y="Amount") +
scale_x_discrete(limits=rev(levels(SocialSecLong$Commonwealth_Electoral_Division_Name))) +
theme_minimal()
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=State, y=amount),
col="grey40",
fill="lightgoldenrod1") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Commonwealth Electoral Division",
caption="(Also referred to as Federal Electoral Division)",
x="Payment Type", y="Amount") +
scale_x_discrete(limits=rev(levels(SocialSecLong$State))) +
theme_minimal()
SocialSecLong$Commonwealth_Electoral_Division_Name <- as.factor(SocialSecLong$Commonwealth_Electoral_Division_Name)
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=State, y=amount),
col="grey40",
fill="lightgoldenrod1") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Commonwealth Electoral Division",
caption="(Also referred to as Federal Electoral Division)",
x="Payment Type", y="Amount") +
scale_x_discrete(limits=rev(levels(SocialSecLong$State))) +
theme_minimal()
unique(myDataFrame$State)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.Assn3.R', echo=TRUE)
source('~/RMIT/2018 RMIT SEM 2/Applied Bayesian Statistics/Course Project/Bayesian.Course.Proj/Jags-Ymet-Xnom2fac-MrobustHet.Assn3.Run.R', echo=TRUE)
maxamount <- max(SocialSecLong$amount)
ggplot(SocialSecLong) +
geom_histogram(na.rm=T,
aes(x=amount),
bins=40,
col="white",
fill="skyblue4") +
theme_minimal() +
labs(title="Histogram of Payment Amounts",
subtitle="(Likelihood Distribution)",
y="Frequency", x="Payment Amount") +
geom_label(x=maxamount*0.9, y=250,
label=paste("Maximum =",maxamount))
SocialSecLong$payment_type <- as.factor(SocialSecLong$payment_type)
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=payment_type, y=amount),
col="grey40",
fill="seagreen1") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Payment Type",
x="Payment Type", y="Amount") +
scale_x_discrete(limits=rev(levels(SocialSecLong$payment_type))) +
theme_minimal()
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=State, y=amount),
col="grey40",
fill="darkslategray2") +
coord_flip() +
labs(title="Distributions of Payment Amounts by State",
x="State", y="Amount") +
theme_minimal()
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=payment_type, y=amount),
col="grey40",
fill="seagreen1") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Payment Type",
x="Payment Type", y="Amount") +
scale_x_discrete(limits=(levels(SocialSecLong$payment_type))) +
theme_minimal()
rev
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=payment_type, y=amount),
col="grey40",
fill="seagreen1") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Payment Type",
x="Payment Type", y="Amount") +
scale_x_discrete(limits=rev(levels(SocialSecLong$payment_type))) +
theme_minimal()
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=State, y=amount),
col="grey40",
fill="darkslategray2") +
coord_flip() +
labs(title="Distributions of Payment Amounts by State",
x="State", y="Amount") +
scale_x_discrete(limits=rev(levels(SocialSecLong$State))) +
theme_minimal()
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=State, y=amount),
col="grey40",
fill="darkslategray2") +
coord_flip() +
labs(title="Distributions of Payment Amounts by State",
x="State", y="Amount") +
scale_x_discrete(limits=(levels(SocialSecLong$State))) +
theme_minimal()
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=State, y=amount),
col="grey40",
fill="darkslategray2") +
coord_flip() +
labs(title="Distributions of Payment Amounts by State",
x="State", y="Amount") +
scale_x_discrete(limits=rev(levels(SocialSecLong$State))) +
theme_minimal()
levels(SocialSecLong$State)
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=State, y=amount),
col="grey40",
fill="darkslategray2") +
coord_flip() +
labs(title="Distributions of Payment Amounts by State",
x="State", y="Amount") +
scale_x_discrete(limits=rev(levels(as.factor(SocialSecLong$State)))) +
theme_minimal()
maxamount <- max(SocialSecLong$amount)
ggplot(SocialSecLong) +
geom_histogram(na.rm=T,
aes(x=amount),
bins=40,
col="white",
fill="skyblue4") +
theme_minimal() +
labs(title="Histogram of Payment Amounts",
subtitle="(Likelihood Distribution)",
y="Frequency", x="Payment Amount") +
geom_label(x=maxamount*0.9, y=250,
label=paste("Maximum =",maxamount))
SocialSecLong$payment_type <- as.factor(SocialSecLong$payment_type)
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=payment_type, y=amount),
col="grey40",
fill="seagreen1") +
coord_flip() +
labs(title="Distributions of Payment Amounts by Payment Type",
x="Payment Type", y="Amount") +
scale_x_discrete(limits=rev(levels(SocialSecLong$payment_type))) +
theme_minimal()
ggplot(SocialSecLong)+
geom_boxplot(na.rm=T,
aes(x=State, y=amount),
col="grey40",
fill="darkslategray2") +
coord_flip() +
labs(title="Distributions of Payment Amounts by State",
x="State", y="Amount") +
scale_x_discrete(limits=rev(levels(as.factor(SocialSecLong$State)))) +
theme_minimal()
